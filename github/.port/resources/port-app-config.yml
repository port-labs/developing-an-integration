resources:
  - kind: organization
    selector:
      query: "true" # JQ boolean query. If evaluated to false - skip syncing the object.
      organizations:
        - "github"
    port:
      entity:
        mappings:
          identifier: ".name" # The Entity identifier will be the organization name.
          title: ".name"
          blueprint: '"githubOrganization"'
          properties:
            description: .description
            url: .html_url
            verified: .is_verified
  - kind: repository
    selector:
      query: "true" # JQ boolean query. If evaluated to false - skip syncing the object.
      organizations:
        - "github"
      type: "public" # all, public, private, forks, sources, member
    port:
      entity:
        mappings:
          identifier: ".name" # The Entity identifier will be the repository name.
          title: ".name"
          blueprint: '"githubRepository"'
          properties:
            description: .description # fetching the README.md file that is within the root folder of the repository and ingesting its contents as a markdown property
            url: .html_url
            defaultBranch: .default_branch
  - kind: pull_request
    selector:
      query: "true" # JQ boolean query. If evaluated to false - skip syncing the object.
      organizations:
        - "github"
      repositoryType: "public" # all, public, private, forks, sources, member
      state: "all" # all, open, closed
    port:
      entity:
        mappings:
          identifier: ".head.repo.name + (.id|tostring)" # The Entity identifier will be the repository name + the pull request ID.
          title: ".title"
          blueprint: '"githubPullRequest"'
          properties:
            creator: ".user.login"
            assignees: "[.assignees[].login]"
            reviewers: "[.requested_reviewers[].login]"
            status: ".state" # merged, closed, opened
            closedAt: ".closed_at"
            updatedAt: ".updated_at"
            mergedAt: ".merged_at"
            createdAt: ".created_at"
            link: ".html_url"
            leadTimeHours: >-
                (.created_at as $createdAt | .merged_at as $mergedAt |
                ($createdAt | sub("\\..*Z$"; "Z") | strptime("%Y-%m-%dT%H:%M:%SZ") | mktime) as $createdTimestamp |
                ($mergedAt | if . == null then null else sub("\\..*Z$"; "Z") |
                strptime("%Y-%m-%dT%H:%M:%SZ") | mktime end) as $mergedTimestamp |
                if $mergedTimestamp == null then null else
                (((($mergedTimestamp - $createdTimestamp) / 3600) * 100 | floor) / 100) end)

          relations:
            repository: .head.repo.name